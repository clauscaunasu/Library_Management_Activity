//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryApp.LibraryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MemberRegister", ReplyAction="http://tempuri.org/IService/MemberRegisterResponse")]
        bool MemberRegister(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MemberRegister", ReplyAction="http://tempuri.org/IService/MemberRegisterResponse")]
        System.Threading.Tasks.Task<bool> MemberRegisterAsync(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MemberLogin", ReplyAction="http://tempuri.org/IService/MemberLoginResponse")]
        LibraryApp.DataModel.Client MemberLogin(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MemberLogin", ReplyAction="http://tempuri.org/IService/MemberLoginResponse")]
        System.Threading.Tasks.Task<LibraryApp.DataModel.Client> MemberLoginAsync(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientList", ReplyAction="http://tempuri.org/IService/ClientListResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.Client> ClientList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientList", ReplyAction="http://tempuri.org/IService/ClientListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Client>> ClientListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditMember", ReplyAction="http://tempuri.org/IService/EditMemberResponse")]
        bool EditMember(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditMember", ReplyAction="http://tempuri.org/IService/EditMemberResponse")]
        System.Threading.Tasks.Task<bool> EditMemberAsync(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteMember", ReplyAction="http://tempuri.org/IService/DeleteMemberResponse")]
        bool DeleteMember(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteMember", ReplyAction="http://tempuri.org/IService/DeleteMemberResponse")]
        System.Threading.Tasks.Task<bool> DeleteMemberAsync(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BooksList", ReplyAction="http://tempuri.org/IService/BooksListResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.Book> BooksList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BooksList", ReplyAction="http://tempuri.org/IService/BooksListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Book>> BooksListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBook", ReplyAction="http://tempuri.org/IService/EditBookResponse")]
        bool EditBook(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBook", ReplyAction="http://tempuri.org/IService/EditBookResponse")]
        System.Threading.Tasks.Task<bool> EditBookAsync(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBranch", ReplyAction="http://tempuri.org/IService/AddBranchResponse")]
        bool AddBranch(LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBranch", ReplyAction="http://tempuri.org/IService/AddBranchResponse")]
        System.Threading.Tasks.Task<bool> AddBranchAsync(LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewBranches", ReplyAction="http://tempuri.org/IService/ViewBranchesResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.Branch> ViewBranches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ViewBranches", ReplyAction="http://tempuri.org/IService/ViewBranchesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Branch>> ViewBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBranch", ReplyAction="http://tempuri.org/IService/EditBranchResponse")]
        bool EditBranch(LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBranch", ReplyAction="http://tempuri.org/IService/EditBranchResponse")]
        System.Threading.Tasks.Task<bool> EditBranchAsync(LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBranch", ReplyAction="http://tempuri.org/IService/DeleteBranchResponse")]
        bool DeleteBranch(LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBranch", ReplyAction="http://tempuri.org/IService/DeleteBranchResponse")]
        System.Threading.Tasks.Task<bool> DeleteBranchAsync(LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBook", ReplyAction="http://tempuri.org/IService/AddBookResponse")]
        bool AddBook(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBook", ReplyAction="http://tempuri.org/IService/AddBookResponse")]
        System.Threading.Tasks.Task<bool> AddBookAsync(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClient", ReplyAction="http://tempuri.org/IService/GetClientResponse")]
        LibraryApp.DataModel.Client GetClient(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClient", ReplyAction="http://tempuri.org/IService/GetClientResponse")]
        System.Threading.Tasks.Task<LibraryApp.DataModel.Client> GetClientAsync(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBookInBranch", ReplyAction="http://tempuri.org/IService/AddBookInBranchResponse")]
        bool AddBookInBranch(LibraryApp.DataModel.Book book, string branchName, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddBookInBranch", ReplyAction="http://tempuri.org/IService/AddBookInBranchResponse")]
        System.Threading.Tasks.Task<bool> AddBookInBranchAsync(LibraryApp.DataModel.Book book, string branchName, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBookFromBranch", ReplyAction="http://tempuri.org/IService/DeleteBookFromBranchResponse")]
        bool DeleteBookFromBranch(LibraryApp.DataModel.Book book, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBookFromBranch", ReplyAction="http://tempuri.org/IService/DeleteBookFromBranchResponse")]
        System.Threading.Tasks.Task<bool> DeleteBookFromBranchAsync(LibraryApp.DataModel.Book book, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNoCopiesFromBranch", ReplyAction="http://tempuri.org/IService/GetNoCopiesFromBranchResponse")]
        int GetNoCopiesFromBranch(LibraryApp.DataModel.Branch branch, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNoCopiesFromBranch", ReplyAction="http://tempuri.org/IService/GetNoCopiesFromBranchResponse")]
        System.Threading.Tasks.Task<int> GetNoCopiesFromBranchAsync(LibraryApp.DataModel.Branch branch, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BorrowBookFromBranch", ReplyAction="http://tempuri.org/IService/BorrowBookFromBranchResponse")]
        bool BorrowBookFromBranch(LibraryApp.DataModel.Book book, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BorrowBookFromBranch", ReplyAction="http://tempuri.org/IService/BorrowBookFromBranchResponse")]
        System.Threading.Tasks.Task<bool> BorrowBookFromBranchAsync(LibraryApp.DataModel.Book book, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReturnBookFromBranch", ReplyAction="http://tempuri.org/IService/ReturnBookFromBranchResponse")]
        bool ReturnBookFromBranch(LibraryApp.DataModel.Book book, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReturnBookFromBranch", ReplyAction="http://tempuri.org/IService/ReturnBookFromBranchResponse")]
        System.Threading.Tasks.Task<bool> ReturnBookFromBranchAsync(LibraryApp.DataModel.Book book, string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBooksFromBranch", ReplyAction="http://tempuri.org/IService/GetBooksFromBranchResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.Book> GetBooksFromBranch(string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBooksFromBranch", ReplyAction="http://tempuri.org/IService/GetBooksFromBranchResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Book>> GetBooksFromBranchAsync(string branchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BranchesForBook", ReplyAction="http://tempuri.org/IService/BranchesForBookResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.Branch> BranchesForBook(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BranchesForBook", ReplyAction="http://tempuri.org/IService/BranchesForBookResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Branch>> BranchesForBookAsync(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetQuantityOfBook", ReplyAction="http://tempuri.org/IService/GetQuantityOfBookResponse")]
        int GetQuantityOfBook(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetQuantityOfBook", ReplyAction="http://tempuri.org/IService/GetQuantityOfBookResponse")]
        System.Threading.Tasks.Task<int> GetQuantityOfBookAsync(LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLibraryFiles", ReplyAction="http://tempuri.org/IService/GetLibraryFilesResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.LibraryFile> GetLibraryFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLibraryFiles", ReplyAction="http://tempuri.org/IService/GetLibraryFilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.LibraryFile>> GetLibraryFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLibraryFile", ReplyAction="http://tempuri.org/IService/AddLibraryFileResponse")]
        bool AddLibraryFile(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book, LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLibraryFile", ReplyAction="http://tempuri.org/IService/AddLibraryFileResponse")]
        System.Threading.Tasks.Task<bool> AddLibraryFileAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book, LibraryApp.DataModel.Branch branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBorrowedBooks", ReplyAction="http://tempuri.org/IService/GetBorrowedBooksResponse")]
        System.Collections.Generic.List<LibraryApp.DataModel.Book> GetBorrowedBooks(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBorrowedBooks", ReplyAction="http://tempuri.org/IService/GetBorrowedBooksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Book>> GetBorrowedBooksAsync(LibraryApp.DataModel.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RenewDueDate", ReplyAction="http://tempuri.org/IService/RenewDueDateResponse")]
        bool RenewDueDate(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RenewDueDate", ReplyAction="http://tempuri.org/IService/RenewDueDateResponse")]
        System.Threading.Tasks.Task<bool> RenewDueDateAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReturnBook", ReplyAction="http://tempuri.org/IService/ReturnBookResponse")]
        bool ReturnBook(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReturnBook", ReplyAction="http://tempuri.org/IService/ReturnBookResponse")]
        System.Threading.Tasks.Task<bool> ReturnBookAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsReturned", ReplyAction="http://tempuri.org/IService/IsReturnedResponse")]
        bool IsReturned(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsReturned", ReplyAction="http://tempuri.org/IService/IsReturnedResponse")]
        System.Threading.Tasks.Task<bool> IsReturnedAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : LibraryApp.LibraryServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<LibraryApp.LibraryServiceReference.IService>, LibraryApp.LibraryServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MemberRegister(LibraryApp.DataModel.Client client) {
            return base.Channel.MemberRegister(client);
        }
        
        public System.Threading.Tasks.Task<bool> MemberRegisterAsync(LibraryApp.DataModel.Client client) {
            return base.Channel.MemberRegisterAsync(client);
        }
        
        public LibraryApp.DataModel.Client MemberLogin(LibraryApp.DataModel.Client client) {
            return base.Channel.MemberLogin(client);
        }
        
        public System.Threading.Tasks.Task<LibraryApp.DataModel.Client> MemberLoginAsync(LibraryApp.DataModel.Client client) {
            return base.Channel.MemberLoginAsync(client);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.Client> ClientList() {
            return base.Channel.ClientList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Client>> ClientListAsync() {
            return base.Channel.ClientListAsync();
        }
        
        public bool EditMember(LibraryApp.DataModel.Client client) {
            return base.Channel.EditMember(client);
        }
        
        public System.Threading.Tasks.Task<bool> EditMemberAsync(LibraryApp.DataModel.Client client) {
            return base.Channel.EditMemberAsync(client);
        }
        
        public bool DeleteMember(LibraryApp.DataModel.Client client) {
            return base.Channel.DeleteMember(client);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMemberAsync(LibraryApp.DataModel.Client client) {
            return base.Channel.DeleteMemberAsync(client);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.Book> BooksList() {
            return base.Channel.BooksList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Book>> BooksListAsync() {
            return base.Channel.BooksListAsync();
        }
        
        public bool EditBook(LibraryApp.DataModel.Book book) {
            return base.Channel.EditBook(book);
        }
        
        public System.Threading.Tasks.Task<bool> EditBookAsync(LibraryApp.DataModel.Book book) {
            return base.Channel.EditBookAsync(book);
        }
        
        public bool AddBranch(LibraryApp.DataModel.Branch branch) {
            return base.Channel.AddBranch(branch);
        }
        
        public System.Threading.Tasks.Task<bool> AddBranchAsync(LibraryApp.DataModel.Branch branch) {
            return base.Channel.AddBranchAsync(branch);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.Branch> ViewBranches() {
            return base.Channel.ViewBranches();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Branch>> ViewBranchesAsync() {
            return base.Channel.ViewBranchesAsync();
        }
        
        public bool EditBranch(LibraryApp.DataModel.Branch branch) {
            return base.Channel.EditBranch(branch);
        }
        
        public System.Threading.Tasks.Task<bool> EditBranchAsync(LibraryApp.DataModel.Branch branch) {
            return base.Channel.EditBranchAsync(branch);
        }
        
        public bool DeleteBranch(LibraryApp.DataModel.Branch branch) {
            return base.Channel.DeleteBranch(branch);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBranchAsync(LibraryApp.DataModel.Branch branch) {
            return base.Channel.DeleteBranchAsync(branch);
        }
        
        public bool AddBook(LibraryApp.DataModel.Book book) {
            return base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task<bool> AddBookAsync(LibraryApp.DataModel.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public LibraryApp.DataModel.Client GetClient(LibraryApp.DataModel.Client client) {
            return base.Channel.GetClient(client);
        }
        
        public System.Threading.Tasks.Task<LibraryApp.DataModel.Client> GetClientAsync(LibraryApp.DataModel.Client client) {
            return base.Channel.GetClientAsync(client);
        }
        
        public bool AddBookInBranch(LibraryApp.DataModel.Book book, string branchName, int quantity) {
            return base.Channel.AddBookInBranch(book, branchName, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddBookInBranchAsync(LibraryApp.DataModel.Book book, string branchName, int quantity) {
            return base.Channel.AddBookInBranchAsync(book, branchName, quantity);
        }
        
        public bool DeleteBookFromBranch(LibraryApp.DataModel.Book book, string branchName) {
            return base.Channel.DeleteBookFromBranch(book, branchName);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookFromBranchAsync(LibraryApp.DataModel.Book book, string branchName) {
            return base.Channel.DeleteBookFromBranchAsync(book, branchName);
        }
        
        public int GetNoCopiesFromBranch(LibraryApp.DataModel.Branch branch, LibraryApp.DataModel.Book book) {
            return base.Channel.GetNoCopiesFromBranch(branch, book);
        }
        
        public System.Threading.Tasks.Task<int> GetNoCopiesFromBranchAsync(LibraryApp.DataModel.Branch branch, LibraryApp.DataModel.Book book) {
            return base.Channel.GetNoCopiesFromBranchAsync(branch, book);
        }
        
        public bool BorrowBookFromBranch(LibraryApp.DataModel.Book book, string branchName) {
            return base.Channel.BorrowBookFromBranch(book, branchName);
        }
        
        public System.Threading.Tasks.Task<bool> BorrowBookFromBranchAsync(LibraryApp.DataModel.Book book, string branchName) {
            return base.Channel.BorrowBookFromBranchAsync(book, branchName);
        }
        
        public bool ReturnBookFromBranch(LibraryApp.DataModel.Book book, string branchName) {
            return base.Channel.ReturnBookFromBranch(book, branchName);
        }
        
        public System.Threading.Tasks.Task<bool> ReturnBookFromBranchAsync(LibraryApp.DataModel.Book book, string branchName) {
            return base.Channel.ReturnBookFromBranchAsync(book, branchName);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.Book> GetBooksFromBranch(string branchName) {
            return base.Channel.GetBooksFromBranch(branchName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Book>> GetBooksFromBranchAsync(string branchName) {
            return base.Channel.GetBooksFromBranchAsync(branchName);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.Branch> BranchesForBook(LibraryApp.DataModel.Book book) {
            return base.Channel.BranchesForBook(book);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Branch>> BranchesForBookAsync(LibraryApp.DataModel.Book book) {
            return base.Channel.BranchesForBookAsync(book);
        }
        
        public int GetQuantityOfBook(LibraryApp.DataModel.Book book) {
            return base.Channel.GetQuantityOfBook(book);
        }
        
        public System.Threading.Tasks.Task<int> GetQuantityOfBookAsync(LibraryApp.DataModel.Book book) {
            return base.Channel.GetQuantityOfBookAsync(book);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.LibraryFile> GetLibraryFiles() {
            return base.Channel.GetLibraryFiles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.LibraryFile>> GetLibraryFilesAsync() {
            return base.Channel.GetLibraryFilesAsync();
        }
        
        public bool AddLibraryFile(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book, LibraryApp.DataModel.Branch branch) {
            return base.Channel.AddLibraryFile(client, book, branch);
        }
        
        public System.Threading.Tasks.Task<bool> AddLibraryFileAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book, LibraryApp.DataModel.Branch branch) {
            return base.Channel.AddLibraryFileAsync(client, book, branch);
        }
        
        public System.Collections.Generic.List<LibraryApp.DataModel.Book> GetBorrowedBooks(LibraryApp.DataModel.Client client) {
            return base.Channel.GetBorrowedBooks(client);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LibraryApp.DataModel.Book>> GetBorrowedBooksAsync(LibraryApp.DataModel.Client client) {
            return base.Channel.GetBorrowedBooksAsync(client);
        }
        
        public bool RenewDueDate(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book) {
            return base.Channel.RenewDueDate(client, book);
        }
        
        public System.Threading.Tasks.Task<bool> RenewDueDateAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book) {
            return base.Channel.RenewDueDateAsync(client, book);
        }
        
        public bool ReturnBook(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book) {
            return base.Channel.ReturnBook(client, book);
        }
        
        public System.Threading.Tasks.Task<bool> ReturnBookAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book) {
            return base.Channel.ReturnBookAsync(client, book);
        }
        
        public bool IsReturned(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book) {
            return base.Channel.IsReturned(client, book);
        }
        
        public System.Threading.Tasks.Task<bool> IsReturnedAsync(LibraryApp.DataModel.Client client, LibraryApp.DataModel.Book book) {
            return base.Channel.IsReturnedAsync(client, book);
        }
    }
}
